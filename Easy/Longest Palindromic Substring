Given a string s, return the longest 
palindromic
 
substring
 in s.

 

Example 1:

Input: s = "babad"
Output: "bab"
Explanation: "aba" is also a valid answer.
Example 2:

Input: s = "cbbd"
Output: "bb"
class Solution {
    public String longestPalindrome(String s) {
        int len= s.length();
        boolean[][]dp=new boolean[len][len];
        int ans[]=new int[]{0,0};

        for(int i=0;i<len;i++)
            dp[i][i]=true;
        
        for(int i=0;i<len-1;i++)
        {
            if(s.charAt(i)==s.charAt(i+1))
            {
                dp[i][i+1]=true;
                ans[0]=i;
                ans[1]=i+1;
            }

        }

        for(int diff=2;diff<len;diff++)
        {
            for(int i=0;i<len-diff;i++)
            {
                int j=i+diff;
                if(s.charAt(i)==s.charAt(j) && dp[i+1][j-1])
                {
                    dp[i][j]=true;
                    ans[0]=i;
                    ans[1]=j;
                }
            }
        }

        int i=ans[0];
        int j=ans[1];
        return s.substring(i,j+1);

    }
}
