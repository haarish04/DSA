Given an integer numRows, return the first numRows of Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:

Example 1:

Input: numRows = 5
Output: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]
Example 2:

Input: numRows = 1
Output: [[1]]

class Solution {
    public List<List<Integer>> generate(int numRows) {
        List <List<Integer>> List = new ArrayList<>();
        List <Integer> firstrow= new ArrayList<>();
        firstrow.add(1);        
        List.add(firstrow);

        for(int i=2;i<=numRows;i++)
        {
            List<Integer> temp = new ArrayList<>();
            for(int j=0;j<i;j++)
            {
                if(j==0 || j== i-1)
                    temp.add(1);
                else
                    temp.add(List.get(i-2).get(j)+List.get(i-2).get(j-1));
            }
            List.add(temp);
        }  
        return List;
    }
}
