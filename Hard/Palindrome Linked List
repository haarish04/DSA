Given the head of a singly linked list, return true if it is a 
palindrome or false otherwise.


Example 1:


Input: head = [1,2,2,1]
Output: true

Example 2:


Input: head = [1,2]
Output: false



class Solution {
    public boolean isPalindrome(ListNode head) {
        
        ListNode slow=head;
        ListNode fast=head;
        while(fast!=null && fast.next!=null)
        {
            slow=slow.next;
            fast=fast.next.next;
        }

        ListNode prev=slow;
        slow=slow.next;
        prev.next=null;

        while (slow!=null)
        {
            ListNode temp=slow.next;
            slow.next=prev;
            prev=slow;
            slow=temp;
        }

        fast=head;
        slow=prev;
        while(slow!=null)
        {
            if(slow.val!=fast.val)
                return false;
            fast=fast.next;
            slow=slow.next;
        }

        return true;
    }
}
