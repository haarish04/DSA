You are given an array of integers nums, there is a sliding window of size k which is moving from the very left of the array to the very right. You can only see the k numbers in the window. Each time the sliding window moves right by one position.

Return the max sliding window.

 

Example 1:

Input: nums = [1,3,-1,-3,5,3,6,7], k = 3
Output: [3,3,5,5,6,7]

class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        int[] ans= new int[nums.length-k+1];
        int temp=0;
        Deque<Integer> q=new ArrayDeque<>();

        for(int i=0;i<nums.length;i++)
        {
            if(!q.isEmpty() && q.peek()<=i-k)
                q.pop();
            
            while(!q.isEmpty() && nums[i]>nums[q.peekLast()])
                q.pollLast();

            q.add(i);
            if(i>=k-1)
            {
                ans[temp++]=nums[q.peek()];
            }            
        }
        return ans;

    }
}
