Given a set of N jobs where each jobi has a deadline and profit associated with it.

Each job takes 1 unit of time to complete and only one job can be scheduled at a time. We earn the profit associated with job if and only if the job is completed by its deadline.

Find the number of jobs done and the maximum profit.

Note: Jobs will be given in the form (Jobid, Deadline, Profit) associated with that Job.


Example 1:

Input:
N = 4
Jobs = {(1,4,20),(2,1,10),(3,1,40),(4,1,30)}
Output:
2 60
Explanation:
Job1 and Job3 can be done with
maximum profit of 60 (20+40).
Example 2:

Input:
N = 5
Jobs = {(1,2,100),(2,1,19),(3,2,27),
        (4,1,25),(5,1,15)}
Output:
2 127
Explanation:
2 jobs can be done with
maximum profit of 127 (100+27).

import java.util.*;

class Job {
  
    // Each job has a unique-id,profit and deadline
    char id;
    int deadline, profit;

    // Constructors
    public Job() {}

    public Job(char id, int deadline, int profit)
    {
        this.id = id;
        this.deadline = deadline;
        this.profit = profit;
    }
        public int[] JobScheduling(Job arr[], int n)
    {
        //sort it on basis of profit
        //try doing the job at the last day of deadline
        //if last day already occupied then the prev day
        Arrays.sort(arr, (a,b)->b.profit-a.profit); //here b-a beacause descending order
        int profit=0;
        int done=0;
        int maxDl = 0;
        for(Job job: arr){
            maxDl=Math.max(maxDl, job.deadline);
        }
        
        int[] av = new int[maxDl+1]; // available slot/days - +1 as 0 based indexing so, just to make it simpler
        Arrays.fill(av, -1);
        
        for(Job job : arr){
            int j = job.deadline; //choosing last day to do the job
            
            while(j>0 && av[j]!=-1) j--; //if last day already occupied then checking for prev day if they are free
            
            if(j!=0){
                av[j]=1;
                done++;
                profit+=job.profit;
                
            }
        }
        return new int[]{done, profit};
    }

